pipeline {
    agent any
    
    options {
    timeout(time: 5, unit: 'MINUTES')
  }
    stages {
        stage("Deploy App") {
            steps {
                sh '''
                docker container run --rm -d -p 8081:8080 --network ci_cinet --name app swagger-petstore
                '''
            }
        }
        stage("Run API Tests") {
            steps {
                sh '''
                docker container run -t --network ci_cinet --name api-test swagger-petstore-api-tests mvn clean verify
                docker cp api-test:/test/target ./target
                docker container rm -f api-test app
                '''
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: './target/site/serenity', reportFiles: 'index.html', reportName: 'API Tests', reportTitles: '', useWrapperFileDirectly: true])
            }
        }
    }
    post {
                // Clean after build
        always {
            cleanWs(cleanWhenNotBuilt: false,
                deleteDirs: true,
                disableDeferredWipeout: true,
                notFailBuild: true,
                patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
                            [pattern: '.propsfile', type: 'EXCLUDE']])
        }
    }
}